Terminals unused in grammar

    "comparable"
    "equivalent"


Grammar

    0 $accept: S $end

    1 S: imports declarations

    2 imports: %empty
    3        | imports import

    4 import: "import" LITTERAL_STRING

    5 declarations: declarations declaration
    6             | declaration

    7 declaration: "class" IDENTIFIER implements extends '{' classDefinition '}'
    8            | "class" "main" '{' classDefinition '}'
    9            | "interface" IDENTIFIER extends_public '{' interfaceDefinition '}'

   10 implements: %empty
   11           | "implements" classNames

   12 extends: %empty
   13        | "extends" determiner className

   14 extends_public: %empty
   15               | "extends" className

   16 classNames: classNames ',' className
   17           | className

   18 className: IDENTIFIER
   19          | IDENTIFIER '<' classNames '>'

   20 classDefinition: %empty
   21                | classDefinitionContent classDefinition

   22 classDefinitionContent: typeDefinition
   23                       | constDefinition
   24                       | attributeDefinition
   25                       | methodDefinition

   26 typeDefinition: "type" IDENTIFIER ":=" typeExpr

   27 constDefinition: "const" IDENTIFIER ":=" constExpr

   28 attributeDefinition: determiner IDENTIFIER ':' typeExpr ';'

   29 methodDefinition: "main" '(' argsDefinition ')' block

   30 $@1: %empty

   31 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@1 block

   32 $@2: %empty

   33 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'

   34 $@3: %empty

   35 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block

   36 $@4: %empty

   37 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'

   38 $@5: %empty

   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block

   40 $@6: %empty

   41 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'

   42 $@7: %empty

   43 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block

   44 $@8: %empty

   45 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'

   46 determiner: %empty
   47           | "private"
   48           | "public"
   49           | "protected"

   50 specifier: %empty
   51          | "virtual"
   52          | "final"

   53 user_defined_operators: "&&"
   54                       | "||"
   55                       | '!'
   56                       | '<'
   57                       | "<="
   58                       | '>'
   59                       | ">="
   60                       | "=="
   61                       | "!="
   62                       | '+'
   63                       | '-'
   64                       | '*'
   65                       | '/'
   66                       | '%'
   67                       | "++"
   68                       | "--"
   69                       | '&'
   70                       | '|'
   71                       | "<<"
   72                       | ">>"
   73                       | ":="
   74                       | "+="
   75                       | "-="
   76                       | "*="
   77                       | "/="
   78                       | "%="
   79                       | "||="
   80                       | "&&="
   81                       | "&="
   82                       | "|="
   83                       | "<<="
   84                       | ">>="
   85                       | "[]"

   86 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition ')' ';'
   87                    | "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';'

   88 typeExpr: "char"
   89         | "integer"
   90         | "float"
   91         | "boolean"
   92         | "string"
   93         | "enum" '<' typeNames '>'
   94         | "range" '<' typeExpr '>'
   95         | "list" '<' typeExpr '>'
   96         | "set" '<' typeExpr '>'
   97         | "map" '<' typeExpr ',' typeExpr '>'
   98         | typePtrExpr

   99 typePtrExpr: IDENTIFIER '<' typeExprs '>'
  100            | IDENTIFIER

  101 typeExprs: typeExprs ',' typeExpr
  102          | typeExpr

  103 typeNames: typeNames ',' typeName
  104          | typeName

  105 typeName: IDENTIFIER

  106 argsDefinition: argsDefinition ',' argDefinition
  107               | argDefinition

  108 argDefinition: IDENTIFIER ':' typeExpr

  109 block: '{' varDefinitions stms '}'

  110 varDefinitions: %empty
  111               | varDefinitions varDefinition

  112 varDefinition: IDENTIFIER ':' typeExpr ';'

  113 stms: stms stm
  114     | stm

  115 stm: simple_stm ';'
  116    | "if" '(' expr ')' stm
  117    | "if" '(' expr ')' stm "else" stm
  118    | "while" '(' expr ')' stm
  119    | "do" stm "while" '(' expr ')' ';'
  120    | "for" '(' assignedVariable ':' expr ')' stm
  121    | "foreach" assignedVariable "in" expr stm
  122    | "switch" '(' assignedVariable ')' '{' case default '}'
  123    | block

  124 case: "case" expr ':' stms
  125     | "case" expr ':' stms case
  126     | error

  127 default: "default" ':' stms
  128        | %empty

  129 simple_stm: assignedVariable ":=" expr
  130           | assignedVariable "++"
  131           | assignedVariable "--"
  132           | assignedVariable "+=" expr
  133           | assignedVariable "-=" expr
  134           | assignedVariable "*=" expr
  135           | assignedVariable "/=" expr
  136           | assignedVariable "%=" expr
  137           | assignedVariable "||=" expr
  138           | assignedVariable "&&=" expr
  139           | assignedVariable "&=" expr
  140           | assignedVariable "|=" expr
  141           | assignedVariable "<<=" expr
  142           | assignedVariable ">>=" expr
  143           | methodName '(' args ')'
  144           | "readln" '(' expr ')'
  145           | "write" '(' expr ')'
  146           | "writeln" '(' expr ')'
  147           | "break"
  148           | "continue"
  149           | "return" expr

  150 assignedVariable: IDENTIFIER
  151                 | IDENTIFIER '[' args ']'
  152                 | assignedVariable '.' IDENTIFIER
  153                 | "this"

  154 methodName: IDENTIFIER
  155           | assignedVariable '.' IDENTIFIER

  156 args: args ',' expr
  157     | expr

  158 constExpr: "null"
  159          | NUMBER_INTEGER
  160          | NUMBER_FLOAT
  161          | LITTERAL_CHAR
  162          | LITTERAL_STRING
  163          | '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'

  164 expr: constExpr
  165     | assignedVariable
  166     | methodName '(' args ')'
  167     | "new" typePtrExpr '(' args_opt ')'
  168     | expr "&&" expr
  169     | expr "||" expr
  170     | '!' expr
  171     | expr '<' expr
  172     | expr "<=" expr
  173     | expr '>' expr
  174     | expr ">=" expr
  175     | expr "==" expr
  176     | expr "!=" expr
  177     | expr '+' expr
  178     | expr '-' expr
  179     | '-' expr
  180     | expr '*' expr
  181     | expr '/' expr
  182     | expr '%' expr
  183     | expr "++"
  184     | expr "--"
  185     | "++" expr
  186     | "--" expr
  187     | expr '&' expr
  188     | expr '|' expr
  189     | expr "<<" expr
  190     | expr ">>" expr
  191     | '(' expr ')'

  192 args_opt: %empty
  193         | args


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 55 170
    '%' (37) 66 182
    '&' (38) 69 187
    '(' (40) 29 31 33 35 37 39 41 43 45 86 87 116 117 118 119 120 122 143 144 145 146 166 167 191
    ')' (41) 29 31 33 35 37 39 41 43 45 86 87 116 117 118 119 120 122 143 144 145 146 166 167 191
    '*' (42) 64 180
    '+' (43) 62 177
    ',' (44) 16 97 101 103 106 156
    '-' (45) 63 178 179
    '.' (46) 152 155
    '/' (47) 65 181
    ':' (58) 28 39 41 43 45 87 108 112 120 124 125 127
    ';' (59) 28 33 37 41 45 86 87 112 115 119
    '<' (60) 19 56 93 94 95 96 97 99 171
    '>' (62) 19 58 93 94 95 96 97 99 173
    '[' (91) 151 163
    ']' (93) 151 163
    '{' (123) 7 8 9 109 122
    '|' (124) 70 188
    '}' (125) 7 8 9 109 122
    error (256) 126
    ":=" (258) 26 27 73 129
    "+=" (259) 74 132
    "-=" (260) 75 133
    "*=" (261) 76 134
    "/=" (262) 77 135
    "%=" (263) 78 136
    "||=" (264) 79 137
    "&&=" (265) 80 138
    "&=" (266) 81 139
    "|=" (267) 82 140
    "<<=" (268) 83 141
    ">>=" (269) 84 142
    "++" (270) 67 130 183 185
    "--" (271) 68 131 184 186
    "&&" (272) 53 168
    "||" (273) 54 169
    "<<" (274) 71 189
    ">>" (275) 72 190
    ".." (276) 163
    "==" (277) 60 175
    "<=" (278) 57 172
    ">=" (279) 59 174
    "!=" (280) 61 176
    "boolean" (281) 91
    "break" (282) 147
    "char" (283) 88
    "class" (284) 7 8
    "comparable" (285)
    "const" (286) 27
    "continue" (287) 148
    "do" (288) 119
    "else" (289) 117
    "enum" (290) 93
    "equivalent" (291)
    "extends" (292) 13 15
    "final" (293) 52
    "float" (294) 90
    "for" (295) 120
    "foreach" (296) 121
    "function" (297) 39 41 87
    "if" (298) 116 117
    "implements" (299) 11
    "import" (300) 4
    "in" (301) 121
    "integer" (302) 89
    "interface" (303) 9
    "list" (304) 95
    "map" (305) 97
    "main" (306) 8 29
    "new" (307) 167
    "null" (308) 158
    "operator" (309) 43 45
    "private" (310) 47
    "protected" (311) 49
    "public" (312) 48
    "procedure" (313) 35 37 86
    "range" (314) 94
    "readln" (315) 144
    "return" (316) 149
    "set" (317) 96
    "string" (318) 92
    "this" (319) 153
    "type" (320) 26
    "virtual" (321) 51
    "write" (322) 145
    "writeln" (323) 146
    "while" (324) 118 119
    "switch" (325) 122
    "case" (326) 124 125
    "default" (327) 127
    IDENTIFIER <String> (328) 7 9 18 19 26 27 28 31 33 35 37 39 41 86 87 99 100 105 108 112 150 151 152 154 155
    LITTERAL_STRING <String> (329) 4 162
    NUMBER_INTEGER <Integer> (330) 159 163
    LITTERAL_CHAR <Integer> (331) 161
    NUMBER_FLOAT <Float> (332) 160
    WITHOUT_ELSE (333)
    DETERMINER (334)
    SPECIFIER (335)
    LEFTPLUSPLUS (336)
    LEFTMINUSMINUS (337)
    UMINUS (338)
    "[]" (339) 85


Nonterminals, with rules where they appear

    $accept (105)
        on left: 0
    S (106)
        on left: 1
        on right: 0
    imports (107)
        on left: 2 3
        on right: 1 3
    import (108)
        on left: 4
        on right: 3
    declarations (109)
        on left: 5 6
        on right: 1 5
    declaration (110)
        on left: 7 8 9
        on right: 5 6
    implements (111)
        on left: 10 11
        on right: 7
    extends (112)
        on left: 12 13
        on right: 7
    extends_public (113)
        on left: 14 15
        on right: 9
    classNames (114)
        on left: 16 17
        on right: 11 16 19
    className (115)
        on left: 18 19
        on right: 13 15 16 17
    classDefinition (116)
        on left: 20 21
        on right: 7 8 21
    classDefinitionContent (117)
        on left: 22 23 24 25
        on right: 21
    typeDefinition (118)
        on left: 26
        on right: 22
    constDefinition (119)
        on left: 27
        on right: 23
    attributeDefinition (120)
        on left: 28
        on right: 24
    methodDefinition (121)
        on left: 29 31 33 35 37 39 41 43 45
        on right: 25
    $@1 (122)
        on left: 30
        on right: 31
    $@2 (123)
        on left: 32
        on right: 33
    $@3 (124)
        on left: 34
        on right: 35
    $@4 (125)
        on left: 36
        on right: 37
    $@5 (126)
        on left: 38
        on right: 39
    $@6 (127)
        on left: 40
        on right: 41
    $@7 (128)
        on left: 42
        on right: 43
    $@8 (129)
        on left: 44
        on right: 45
    determiner (130)
        on left: 46 47 48 49
        on right: 13 28 31 33 35 37 39 41
    specifier (131)
        on left: 50 51 52
        on right: 35 37 39 41
    user_defined_operators <String> (132)
        on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
        on right: 43 45
    interfaceDefinition (133)
        on left: 86 87
        on right: 9
    typeExpr <Type> (134)
        on left: 88 89 90 91 92 93 94 95 96 97 98
        on right: 26 28 39 41 43 45 87 94 95 96 97 101 102 108 112
    typePtrExpr <Type> (135)
        on left: 99 100
        on right: 98 167
    typeExprs <Type> (136)
        on left: 101 102
        on right: 99 101
    typeNames <Type> (137)
        on left: 103 104
        on right: 93 103
    typeName <Type> (138)
        on left: 105
        on right: 103 104
    argsDefinition <Type> (139)
        on left: 106 107
        on right: 29 31 33 35 37 39 41 43 45 86 87 106
    argDefinition <Type> (140)
        on left: 108
        on right: 106 107
    block (141)
        on left: 109
        on right: 29 31 35 39 43 123
    varDefinitions (142)
        on left: 110 111
        on right: 109 111
    varDefinition (143)
        on left: 112
        on right: 111
    stms (144)
        on left: 113 114
        on right: 109 113 124 125 127
    stm (145)
        on left: 115 116 117 118 119 120 121 122 123
        on right: 113 114 116 117 118 119 120 121
    case (146)
        on left: 124 125 126
        on right: 122 125
    default (147)
        on left: 127 128
        on right: 122
    simple_stm (148)
        on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149
        on right: 115
    assignedVariable <Type> (149)
        on left: 150 151 152 153
        on right: 120 121 122 129 130 131 132 133 134 135 136 137 138 139 140 141 142 152 155 165
    methodName <Type> (150)
        on left: 154 155
        on right: 143 166
    args <Type> (151)
        on left: 156 157
        on right: 143 151 156 166 193
    constExpr <Type> (152)
        on left: 158 159 160 161 162 163
        on right: 27 164
    expr <Type> (153)
        on left: 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191
        on right: 116 117 118 119 120 121 124 125 129 132 133 134 135 136 137 138 139 140 141 142 144 145 146 149 156 157 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191
    args_opt <Type> (154)
        on left: 192 193
        on right: 167


State 0

    0 $accept: • S $end
    1 S: • imports declarations
    2 imports: • %empty
    3        | • imports import

    $default  reduce using rule 2 (imports)

    S        go to state 1
    imports  go to state 2


State 1

    0 $accept: S • $end

    $end  shift, and go to state 3


State 2

    1 S: imports • declarations
    3 imports: imports • import
    4 import: • "import" LITTERAL_STRING
    5 declarations: • declarations declaration
    6             | • declaration
    7 declaration: • "class" IDENTIFIER implements extends '{' classDefinition '}'
    8            | • "class" "main" '{' classDefinition '}'
    9            | • "interface" IDENTIFIER extends_public '{' interfaceDefinition '}'

    "class"      shift, and go to state 4
    "import"     shift, and go to state 5
    "interface"  shift, and go to state 6

    import        go to state 7
    declarations  go to state 8
    declaration   go to state 9


State 3

    0 $accept: S $end •

    $default  accept


State 4

    7 declaration: "class" • IDENTIFIER implements extends '{' classDefinition '}'
    8            | "class" • "main" '{' classDefinition '}'

    "main"      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11


State 5

    4 import: "import" • LITTERAL_STRING

    LITTERAL_STRING  shift, and go to state 12


State 6

    9 declaration: "interface" • IDENTIFIER extends_public '{' interfaceDefinition '}'

    IDENTIFIER  shift, and go to state 13


State 7

    3 imports: imports import •

    $default  reduce using rule 3 (imports)


State 8

    1 S: imports declarations •
    5 declarations: declarations • declaration
    7 declaration: • "class" IDENTIFIER implements extends '{' classDefinition '}'
    8            | • "class" "main" '{' classDefinition '}'
    9            | • "interface" IDENTIFIER extends_public '{' interfaceDefinition '}'

    "class"      shift, and go to state 4
    "interface"  shift, and go to state 6

    $default  reduce using rule 1 (S)

    declaration  go to state 14


State 9

    6 declarations: declaration •

    $default  reduce using rule 6 (declarations)


State 10

    8 declaration: "class" "main" • '{' classDefinition '}'

    '{'  shift, and go to state 15


State 11

    7 declaration: "class" IDENTIFIER • implements extends '{' classDefinition '}'
   10 implements: • %empty
   11           | • "implements" classNames

    "implements"  shift, and go to state 16

    $default  reduce using rule 10 (implements)

    implements  go to state 17


State 12

    4 import: "import" LITTERAL_STRING •

    $default  reduce using rule 4 (import)


State 13

    9 declaration: "interface" IDENTIFIER • extends_public '{' interfaceDefinition '}'
   14 extends_public: • %empty
   15               | • "extends" className

    "extends"  shift, and go to state 18

    $default  reduce using rule 14 (extends_public)

    extends_public  go to state 19


State 14

    5 declarations: declarations declaration •

    $default  reduce using rule 5 (declarations)


State 15

    8 declaration: "class" "main" '{' • classDefinition '}'
   20 classDefinition: • %empty
   21                | • classDefinitionContent classDefinition
   22 classDefinitionContent: • typeDefinition
   23                       | • constDefinition
   24                       | • attributeDefinition
   25                       | • methodDefinition
   26 typeDefinition: • "type" IDENTIFIER ":=" typeExpr
   27 constDefinition: • "const" IDENTIFIER ":=" constExpr
   28 attributeDefinition: • determiner IDENTIFIER ':' typeExpr ';'
   29 methodDefinition: • "main" '(' argsDefinition ')' block
   31                 | • determiner IDENTIFIER '(' argsDefinition ')' $@1 block
   33                 | • determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'
   35                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   37                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   39                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   41                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   43                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   45                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   46 determiner: • %empty
   47           | • "private"
   48           | • "public"
   49           | • "protected"

    "const"      shift, and go to state 20
    "main"       shift, and go to state 21
    "operator"   shift, and go to state 22
    "private"    shift, and go to state 23
    "protected"  shift, and go to state 24
    "public"     shift, and go to state 25
    "type"       shift, and go to state 26

    '}'       reduce using rule 20 (classDefinition)
    $default  reduce using rule 46 (determiner)

    classDefinition         go to state 27
    classDefinitionContent  go to state 28
    typeDefinition          go to state 29
    constDefinition         go to state 30
    attributeDefinition     go to state 31
    methodDefinition        go to state 32
    determiner              go to state 33


State 16

   11 implements: "implements" • classNames
   16 classNames: • classNames ',' className
   17           | • className
   18 className: • IDENTIFIER
   19          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 34

    classNames  go to state 35
    className   go to state 36


State 17

    7 declaration: "class" IDENTIFIER implements • extends '{' classDefinition '}'
   12 extends: • %empty
   13        | • "extends" determiner className

    "extends"  shift, and go to state 37

    $default  reduce using rule 12 (extends)

    extends  go to state 38


State 18

   15 extends_public: "extends" • className
   18 className: • IDENTIFIER
   19          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 34

    className  go to state 39


State 19

    9 declaration: "interface" IDENTIFIER extends_public • '{' interfaceDefinition '}'

    '{'  shift, and go to state 40


State 20

   27 constDefinition: "const" • IDENTIFIER ":=" constExpr

    IDENTIFIER  shift, and go to state 41


State 21

   29 methodDefinition: "main" • '(' argsDefinition ')' block

    '('  shift, and go to state 42


State 22

   43 methodDefinition: "operator" • user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   45                 | "operator" • user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   53 user_defined_operators: • "&&"
   54                       | • "||"
   55                       | • '!'
   56                       | • '<'
   57                       | • "<="
   58                       | • '>'
   59                       | • ">="
   60                       | • "=="
   61                       | • "!="
   62                       | • '+'
   63                       | • '-'
   64                       | • '*'
   65                       | • '/'
   66                       | • '%'
   67                       | • "++"
   68                       | • "--"
   69                       | • '&'
   70                       | • '|'
   71                       | • "<<"
   72                       | • ">>"
   73                       | • ":="
   74                       | • "+="
   75                       | • "-="
   76                       | • "*="
   77                       | • "/="
   78                       | • "%="
   79                       | • "||="
   80                       | • "&&="
   81                       | • "&="
   82                       | • "|="
   83                       | • "<<="
   84                       | • ">>="
   85                       | • "[]"

    ":="   shift, and go to state 43
    "+="   shift, and go to state 44
    "-="   shift, and go to state 45
    "*="   shift, and go to state 46
    "/="   shift, and go to state 47
    "%="   shift, and go to state 48
    "||="  shift, and go to state 49
    "&&="  shift, and go to state 50
    "&="   shift, and go to state 51
    "|="   shift, and go to state 52
    "<<="  shift, and go to state 53
    ">>="  shift, and go to state 54
    "++"   shift, and go to state 55
    "--"   shift, and go to state 56
    "&&"   shift, and go to state 57
    "||"   shift, and go to state 58
    "<<"   shift, and go to state 59
    ">>"   shift, and go to state 60
    "=="   shift, and go to state 61
    "<="   shift, and go to state 62
    ">="   shift, and go to state 63
    "!="   shift, and go to state 64
    '!'    shift, and go to state 65
    '<'    shift, and go to state 66
    '>'    shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69
    '*'    shift, and go to state 70
    '/'    shift, and go to state 71
    '%'    shift, and go to state 72
    '|'    shift, and go to state 73
    '&'    shift, and go to state 74
    "[]"   shift, and go to state 75

    user_defined_operators  go to state 76


State 23

   47 determiner: "private" •

    $default  reduce using rule 47 (determiner)


State 24

   49 determiner: "protected" •

    $default  reduce using rule 49 (determiner)


State 25

   48 determiner: "public" •

    $default  reduce using rule 48 (determiner)


State 26

   26 typeDefinition: "type" • IDENTIFIER ":=" typeExpr

    IDENTIFIER  shift, and go to state 77


State 27

    8 declaration: "class" "main" '{' classDefinition • '}'

    '}'  shift, and go to state 78


State 28

   20 classDefinition: • %empty
   21                | • classDefinitionContent classDefinition
   21                | classDefinitionContent • classDefinition
   22 classDefinitionContent: • typeDefinition
   23                       | • constDefinition
   24                       | • attributeDefinition
   25                       | • methodDefinition
   26 typeDefinition: • "type" IDENTIFIER ":=" typeExpr
   27 constDefinition: • "const" IDENTIFIER ":=" constExpr
   28 attributeDefinition: • determiner IDENTIFIER ':' typeExpr ';'
   29 methodDefinition: • "main" '(' argsDefinition ')' block
   31                 | • determiner IDENTIFIER '(' argsDefinition ')' $@1 block
   33                 | • determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'
   35                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   37                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   39                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   41                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   43                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   45                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   46 determiner: • %empty
   47           | • "private"
   48           | • "public"
   49           | • "protected"

    "const"      shift, and go to state 20
    "main"       shift, and go to state 21
    "operator"   shift, and go to state 22
    "private"    shift, and go to state 23
    "protected"  shift, and go to state 24
    "public"     shift, and go to state 25
    "type"       shift, and go to state 26

    '}'       reduce using rule 20 (classDefinition)
    $default  reduce using rule 46 (determiner)

    classDefinition         go to state 79
    classDefinitionContent  go to state 28
    typeDefinition          go to state 29
    constDefinition         go to state 30
    attributeDefinition     go to state 31
    methodDefinition        go to state 32
    determiner              go to state 33


State 29

   22 classDefinitionContent: typeDefinition •

    $default  reduce using rule 22 (classDefinitionContent)


State 30

   23 classDefinitionContent: constDefinition •

    $default  reduce using rule 23 (classDefinitionContent)


State 31

   24 classDefinitionContent: attributeDefinition •

    $default  reduce using rule 24 (classDefinitionContent)


State 32

   25 classDefinitionContent: methodDefinition •

    $default  reduce using rule 25 (classDefinitionContent)


State 33

   28 attributeDefinition: determiner • IDENTIFIER ':' typeExpr ';'
   31 methodDefinition: determiner • IDENTIFIER '(' argsDefinition ')' $@1 block
   33                 | determiner • IDENTIFIER '(' argsDefinition ')' $@2 ';'
   35                 | determiner • specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   37                 | determiner • specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   39                 | determiner • specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   41                 | determiner • specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   50 specifier: • %empty
   51          | • "virtual"
   52          | • "final"

    "final"     shift, and go to state 80
    "virtual"   shift, and go to state 81
    IDENTIFIER  shift, and go to state 82

    $default  reduce using rule 50 (specifier)

    specifier  go to state 83


State 34

   18 className: IDENTIFIER •
   19          | IDENTIFIER • '<' classNames '>'

    '<'  shift, and go to state 84

    $default  reduce using rule 18 (className)


State 35

   11 implements: "implements" classNames •
   16 classNames: classNames • ',' className

    ','  shift, and go to state 85

    $default  reduce using rule 11 (implements)


State 36

   17 classNames: className •

    $default  reduce using rule 17 (classNames)


State 37

   13 extends: "extends" • determiner className
   46 determiner: • %empty
   47           | • "private"
   48           | • "public"
   49           | • "protected"

    "private"    shift, and go to state 23
    "protected"  shift, and go to state 24
    "public"     shift, and go to state 25

    $default  reduce using rule 46 (determiner)

    determiner  go to state 86


State 38

    7 declaration: "class" IDENTIFIER implements extends • '{' classDefinition '}'

    '{'  shift, and go to state 87


State 39

   15 extends_public: "extends" className •

    $default  reduce using rule 15 (extends_public)


State 40

    9 declaration: "interface" IDENTIFIER extends_public '{' • interfaceDefinition '}'
   86 interfaceDefinition: • "procedure" IDENTIFIER '(' argsDefinition ')' ';'
   87                    | • "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';'

    "function"   shift, and go to state 88
    "procedure"  shift, and go to state 89

    interfaceDefinition  go to state 90


State 41

   27 constDefinition: "const" IDENTIFIER • ":=" constExpr

    ":="  shift, and go to state 91


State 42

   29 methodDefinition: "main" '(' • argsDefinition ')' block
  106 argsDefinition: • argsDefinition ',' argDefinition
  107               | • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argsDefinition  go to state 93
    argDefinition   go to state 94


State 43

   73 user_defined_operators: ":=" •

    $default  reduce using rule 73 (user_defined_operators)


State 44

   74 user_defined_operators: "+=" •

    $default  reduce using rule 74 (user_defined_operators)


State 45

   75 user_defined_operators: "-=" •

    $default  reduce using rule 75 (user_defined_operators)


State 46

   76 user_defined_operators: "*=" •

    $default  reduce using rule 76 (user_defined_operators)


State 47

   77 user_defined_operators: "/=" •

    $default  reduce using rule 77 (user_defined_operators)


State 48

   78 user_defined_operators: "%=" •

    $default  reduce using rule 78 (user_defined_operators)


State 49

   79 user_defined_operators: "||=" •

    $default  reduce using rule 79 (user_defined_operators)


State 50

   80 user_defined_operators: "&&=" •

    $default  reduce using rule 80 (user_defined_operators)


State 51

   81 user_defined_operators: "&=" •

    $default  reduce using rule 81 (user_defined_operators)


State 52

   82 user_defined_operators: "|=" •

    $default  reduce using rule 82 (user_defined_operators)


State 53

   83 user_defined_operators: "<<=" •

    $default  reduce using rule 83 (user_defined_operators)


State 54

   84 user_defined_operators: ">>=" •

    $default  reduce using rule 84 (user_defined_operators)


State 55

   67 user_defined_operators: "++" •

    $default  reduce using rule 67 (user_defined_operators)


State 56

   68 user_defined_operators: "--" •

    $default  reduce using rule 68 (user_defined_operators)


State 57

   53 user_defined_operators: "&&" •

    $default  reduce using rule 53 (user_defined_operators)


State 58

   54 user_defined_operators: "||" •

    $default  reduce using rule 54 (user_defined_operators)


State 59

   71 user_defined_operators: "<<" •

    $default  reduce using rule 71 (user_defined_operators)


State 60

   72 user_defined_operators: ">>" •

    $default  reduce using rule 72 (user_defined_operators)


State 61

   60 user_defined_operators: "==" •

    $default  reduce using rule 60 (user_defined_operators)


State 62

   57 user_defined_operators: "<=" •

    $default  reduce using rule 57 (user_defined_operators)


State 63

   59 user_defined_operators: ">=" •

    $default  reduce using rule 59 (user_defined_operators)


State 64

   61 user_defined_operators: "!=" •

    $default  reduce using rule 61 (user_defined_operators)


State 65

   55 user_defined_operators: '!' •

    $default  reduce using rule 55 (user_defined_operators)


State 66

   56 user_defined_operators: '<' •

    $default  reduce using rule 56 (user_defined_operators)


State 67

   58 user_defined_operators: '>' •

    $default  reduce using rule 58 (user_defined_operators)


State 68

   62 user_defined_operators: '+' •

    $default  reduce using rule 62 (user_defined_operators)


State 69

   63 user_defined_operators: '-' •

    $default  reduce using rule 63 (user_defined_operators)


State 70

   64 user_defined_operators: '*' •

    $default  reduce using rule 64 (user_defined_operators)


State 71

   65 user_defined_operators: '/' •

    $default  reduce using rule 65 (user_defined_operators)


State 72

   66 user_defined_operators: '%' •

    $default  reduce using rule 66 (user_defined_operators)


State 73

   70 user_defined_operators: '|' •

    $default  reduce using rule 70 (user_defined_operators)


State 74

   69 user_defined_operators: '&' •

    $default  reduce using rule 69 (user_defined_operators)


State 75

   85 user_defined_operators: "[]" •

    $default  reduce using rule 85 (user_defined_operators)


State 76

   43 methodDefinition: "operator" user_defined_operators • '(' argsDefinition ')' ':' typeExpr $@7 block
   45                 | "operator" user_defined_operators • '(' argsDefinition ')' ':' typeExpr $@8 ';'

    '('  shift, and go to state 95


State 77

   26 typeDefinition: "type" IDENTIFIER • ":=" typeExpr

    ":="  shift, and go to state 96


State 78

    8 declaration: "class" "main" '{' classDefinition '}' •

    $default  reduce using rule 8 (declaration)


State 79

   21 classDefinition: classDefinitionContent classDefinition •

    $default  reduce using rule 21 (classDefinition)


State 80

   52 specifier: "final" •

    $default  reduce using rule 52 (specifier)


State 81

   51 specifier: "virtual" •

    $default  reduce using rule 51 (specifier)


State 82

   28 attributeDefinition: determiner IDENTIFIER • ':' typeExpr ';'
   31 methodDefinition: determiner IDENTIFIER • '(' argsDefinition ')' $@1 block
   33                 | determiner IDENTIFIER • '(' argsDefinition ')' $@2 ';'

    ':'  shift, and go to state 97
    '('  shift, and go to state 98


State 83

   35 methodDefinition: determiner specifier • "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   37                 | determiner specifier • "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   39                 | determiner specifier • "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   41                 | determiner specifier • "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'

    "function"   shift, and go to state 99
    "procedure"  shift, and go to state 100


State 84

   16 classNames: • classNames ',' className
   17           | • className
   18 className: • IDENTIFIER
   19          | • IDENTIFIER '<' classNames '>'
   19          | IDENTIFIER '<' • classNames '>'

    IDENTIFIER  shift, and go to state 34

    classNames  go to state 101
    className   go to state 36


State 85

   16 classNames: classNames ',' • className
   18 className: • IDENTIFIER
   19          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 34

    className  go to state 102


State 86

   13 extends: "extends" determiner • className
   18 className: • IDENTIFIER
   19          | • IDENTIFIER '<' classNames '>'

    IDENTIFIER  shift, and go to state 34

    className  go to state 103


State 87

    7 declaration: "class" IDENTIFIER implements extends '{' • classDefinition '}'
   20 classDefinition: • %empty
   21                | • classDefinitionContent classDefinition
   22 classDefinitionContent: • typeDefinition
   23                       | • constDefinition
   24                       | • attributeDefinition
   25                       | • methodDefinition
   26 typeDefinition: • "type" IDENTIFIER ":=" typeExpr
   27 constDefinition: • "const" IDENTIFIER ":=" constExpr
   28 attributeDefinition: • determiner IDENTIFIER ':' typeExpr ';'
   29 methodDefinition: • "main" '(' argsDefinition ')' block
   31                 | • determiner IDENTIFIER '(' argsDefinition ')' $@1 block
   33                 | • determiner IDENTIFIER '(' argsDefinition ')' $@2 ';'
   35                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block
   37                 | • determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';'
   39                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   41                 | • determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'
   43                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block
   45                 | • "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';'
   46 determiner: • %empty
   47           | • "private"
   48           | • "public"
   49           | • "protected"

    "const"      shift, and go to state 20
    "main"       shift, and go to state 21
    "operator"   shift, and go to state 22
    "private"    shift, and go to state 23
    "protected"  shift, and go to state 24
    "public"     shift, and go to state 25
    "type"       shift, and go to state 26

    '}'       reduce using rule 20 (classDefinition)
    $default  reduce using rule 46 (determiner)

    classDefinition         go to state 104
    classDefinitionContent  go to state 28
    typeDefinition          go to state 29
    constDefinition         go to state 30
    attributeDefinition     go to state 31
    methodDefinition        go to state 32
    determiner              go to state 33


State 88

   87 interfaceDefinition: "function" • IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';'

    IDENTIFIER  shift, and go to state 105


State 89

   86 interfaceDefinition: "procedure" • IDENTIFIER '(' argsDefinition ')' ';'

    IDENTIFIER  shift, and go to state 106


State 90

    9 declaration: "interface" IDENTIFIER extends_public '{' interfaceDefinition • '}'

    '}'  shift, and go to state 107


State 91

   27 constDefinition: "const" IDENTIFIER ":=" • constExpr
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'

    "null"           shift, and go to state 108
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '['              shift, and go to state 113

    constExpr  go to state 114


State 92

  108 argDefinition: IDENTIFIER • ':' typeExpr

    ':'  shift, and go to state 115


State 93

   29 methodDefinition: "main" '(' argsDefinition • ')' block
  106 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 116
    ')'  shift, and go to state 117


State 94

  107 argsDefinition: argDefinition •

    $default  reduce using rule 107 (argsDefinition)


State 95

   43 methodDefinition: "operator" user_defined_operators '(' • argsDefinition ')' ':' typeExpr $@7 block
   45                 | "operator" user_defined_operators '(' • argsDefinition ')' ':' typeExpr $@8 ';'
  106 argsDefinition: • argsDefinition ',' argDefinition
  107               | • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argsDefinition  go to state 118
    argDefinition   go to state 94


State 96

   26 typeDefinition: "type" IDENTIFIER ":=" • typeExpr
   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 130
    typePtrExpr  go to state 131


State 97

   28 attributeDefinition: determiner IDENTIFIER ':' • typeExpr ';'
   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 132
    typePtrExpr  go to state 131


State 98

   31 methodDefinition: determiner IDENTIFIER '(' • argsDefinition ')' $@1 block
   33                 | determiner IDENTIFIER '(' • argsDefinition ')' $@2 ';'
  106 argsDefinition: • argsDefinition ',' argDefinition
  107               | • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argsDefinition  go to state 133
    argDefinition   go to state 94


State 99

   39 methodDefinition: determiner specifier "function" • IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block
   41                 | determiner specifier "function" • IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';'

    IDENTIFIER  shift, and go to state 134


State 100

   35 methodDefinition: determiner specifier "procedure" • IDENTIFIER '(' argsDefinition ')' $@3 block
   37                 | determiner specifier "procedure" • IDENTIFIER '(' argsDefinition ')' $@4 ';'

    IDENTIFIER  shift, and go to state 135


State 101

   16 classNames: classNames • ',' className
   19 className: IDENTIFIER '<' classNames • '>'

    '>'  shift, and go to state 136
    ','  shift, and go to state 85


State 102

   16 classNames: classNames ',' className •

    $default  reduce using rule 16 (classNames)


State 103

   13 extends: "extends" determiner className •

    $default  reduce using rule 13 (extends)


State 104

    7 declaration: "class" IDENTIFIER implements extends '{' classDefinition • '}'

    '}'  shift, and go to state 137


State 105

   87 interfaceDefinition: "function" IDENTIFIER • '(' argsDefinition ')' ':' typeExpr ';'

    '('  shift, and go to state 138


State 106

   86 interfaceDefinition: "procedure" IDENTIFIER • '(' argsDefinition ')' ';'

    '('  shift, and go to state 139


State 107

    9 declaration: "interface" IDENTIFIER extends_public '{' interfaceDefinition '}' •

    $default  reduce using rule 9 (declaration)


State 108

  158 constExpr: "null" •

    $default  reduce using rule 158 (constExpr)


State 109

  162 constExpr: LITTERAL_STRING •

    $default  reduce using rule 162 (constExpr)


State 110

  159 constExpr: NUMBER_INTEGER •

    $default  reduce using rule 159 (constExpr)


State 111

  161 constExpr: LITTERAL_CHAR •

    $default  reduce using rule 161 (constExpr)


State 112

  160 constExpr: NUMBER_FLOAT •

    $default  reduce using rule 160 (constExpr)


State 113

  163 constExpr: '[' • NUMBER_INTEGER ".." NUMBER_INTEGER ']'

    NUMBER_INTEGER  shift, and go to state 140


State 114

   27 constDefinition: "const" IDENTIFIER ":=" constExpr •

    $default  reduce using rule 27 (constDefinition)


State 115

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER
  108 argDefinition: IDENTIFIER ':' • typeExpr

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 141
    typePtrExpr  go to state 131


State 116

  106 argsDefinition: argsDefinition ',' • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argDefinition  go to state 142


State 117

   29 methodDefinition: "main" '(' argsDefinition ')' • block
  109 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 143

    block  go to state 144


State 118

   43 methodDefinition: "operator" user_defined_operators '(' argsDefinition • ')' ':' typeExpr $@7 block
   45                 | "operator" user_defined_operators '(' argsDefinition • ')' ':' typeExpr $@8 ';'
  106 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 116
    ')'  shift, and go to state 145


State 119

   91 typeExpr: "boolean" •

    $default  reduce using rule 91 (typeExpr)


State 120

   88 typeExpr: "char" •

    $default  reduce using rule 88 (typeExpr)


State 121

   93 typeExpr: "enum" • '<' typeNames '>'

    '<'  shift, and go to state 146


State 122

   90 typeExpr: "float" •

    $default  reduce using rule 90 (typeExpr)


State 123

   89 typeExpr: "integer" •

    $default  reduce using rule 89 (typeExpr)


State 124

   95 typeExpr: "list" • '<' typeExpr '>'

    '<'  shift, and go to state 147


State 125

   97 typeExpr: "map" • '<' typeExpr ',' typeExpr '>'

    '<'  shift, and go to state 148


State 126

   94 typeExpr: "range" • '<' typeExpr '>'

    '<'  shift, and go to state 149


State 127

   96 typeExpr: "set" • '<' typeExpr '>'

    '<'  shift, and go to state 150


State 128

   92 typeExpr: "string" •

    $default  reduce using rule 92 (typeExpr)


State 129

   99 typePtrExpr: IDENTIFIER • '<' typeExprs '>'
  100            | IDENTIFIER •

    '<'  shift, and go to state 151

    $default  reduce using rule 100 (typePtrExpr)


State 130

   26 typeDefinition: "type" IDENTIFIER ":=" typeExpr •

    $default  reduce using rule 26 (typeDefinition)


State 131

   98 typeExpr: typePtrExpr •

    $default  reduce using rule 98 (typeExpr)


State 132

   28 attributeDefinition: determiner IDENTIFIER ':' typeExpr • ';'

    ';'  shift, and go to state 152


State 133

   31 methodDefinition: determiner IDENTIFIER '(' argsDefinition • ')' $@1 block
   33                 | determiner IDENTIFIER '(' argsDefinition • ')' $@2 ';'
  106 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 116
    ')'  shift, and go to state 153


State 134

   39 methodDefinition: determiner specifier "function" IDENTIFIER • '(' argsDefinition ')' ':' typeExpr $@5 block
   41                 | determiner specifier "function" IDENTIFIER • '(' argsDefinition ')' ':' typeExpr $@6 ';'

    '('  shift, and go to state 154


State 135

   35 methodDefinition: determiner specifier "procedure" IDENTIFIER • '(' argsDefinition ')' $@3 block
   37                 | determiner specifier "procedure" IDENTIFIER • '(' argsDefinition ')' $@4 ';'

    '('  shift, and go to state 155


State 136

   19 className: IDENTIFIER '<' classNames '>' •

    $default  reduce using rule 19 (className)


State 137

    7 declaration: "class" IDENTIFIER implements extends '{' classDefinition '}' •

    $default  reduce using rule 7 (declaration)


State 138

   87 interfaceDefinition: "function" IDENTIFIER '(' • argsDefinition ')' ':' typeExpr ';'
  106 argsDefinition: • argsDefinition ',' argDefinition
  107               | • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argsDefinition  go to state 156
    argDefinition   go to state 94


State 139

   86 interfaceDefinition: "procedure" IDENTIFIER '(' • argsDefinition ')' ';'
  106 argsDefinition: • argsDefinition ',' argDefinition
  107               | • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argsDefinition  go to state 157
    argDefinition   go to state 94


State 140

  163 constExpr: '[' NUMBER_INTEGER • ".." NUMBER_INTEGER ']'

    ".."  shift, and go to state 158


State 141

  108 argDefinition: IDENTIFIER ':' typeExpr •

    $default  reduce using rule 108 (argDefinition)


State 142

  106 argsDefinition: argsDefinition ',' argDefinition •

    $default  reduce using rule 106 (argsDefinition)


State 143

  109 block: '{' • varDefinitions stms '}'
  110 varDefinitions: • %empty
  111               | • varDefinitions varDefinition

    $default  reduce using rule 110 (varDefinitions)

    varDefinitions  go to state 159


State 144

   29 methodDefinition: "main" '(' argsDefinition ')' block •

    $default  reduce using rule 29 (methodDefinition)


State 145

   43 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' • ':' typeExpr $@7 block
   45                 | "operator" user_defined_operators '(' argsDefinition ')' • ':' typeExpr $@8 ';'

    ':'  shift, and go to state 160


State 146

   93 typeExpr: "enum" '<' • typeNames '>'
  103 typeNames: • typeNames ',' typeName
  104          | • typeName
  105 typeName: • IDENTIFIER

    IDENTIFIER  shift, and go to state 161

    typeNames  go to state 162
    typeName   go to state 163


State 147

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   95         | "list" '<' • typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 164
    typePtrExpr  go to state 131


State 148

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   97         | "map" '<' • typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 165
    typePtrExpr  go to state 131


State 149

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   94         | "range" '<' • typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 166
    typePtrExpr  go to state 131


State 150

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   96         | "set" '<' • typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 167
    typePtrExpr  go to state 131


State 151

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
   99            | IDENTIFIER '<' • typeExprs '>'
  100            | • IDENTIFIER
  101 typeExprs: • typeExprs ',' typeExpr
  102          | • typeExpr

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 168
    typePtrExpr  go to state 131
    typeExprs    go to state 169


State 152

   28 attributeDefinition: determiner IDENTIFIER ':' typeExpr ';' •

    $default  reduce using rule 28 (attributeDefinition)


State 153

   30 $@1: • %empty
   31 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' • $@1 block
   32 $@2: • %empty
   33 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' • $@2 ';'

    ';'       reduce using rule 32 ($@2)
    $default  reduce using rule 30 ($@1)

    $@1  go to state 170
    $@2  go to state 171


State 154

   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' • argsDefinition ')' ':' typeExpr $@5 block
   41                 | determiner specifier "function" IDENTIFIER '(' • argsDefinition ')' ':' typeExpr $@6 ';'
  106 argsDefinition: • argsDefinition ',' argDefinition
  107               | • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argsDefinition  go to state 172
    argDefinition   go to state 94


State 155

   35 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' • argsDefinition ')' $@3 block
   37                 | determiner specifier "procedure" IDENTIFIER '(' • argsDefinition ')' $@4 ';'
  106 argsDefinition: • argsDefinition ',' argDefinition
  107               | • argDefinition
  108 argDefinition: • IDENTIFIER ':' typeExpr

    IDENTIFIER  shift, and go to state 92

    argsDefinition  go to state 173
    argDefinition   go to state 94


State 156

   87 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition • ')' ':' typeExpr ';'
  106 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 116
    ')'  shift, and go to state 174


State 157

   86 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition • ')' ';'
  106 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 116
    ')'  shift, and go to state 175


State 158

  163 constExpr: '[' NUMBER_INTEGER ".." • NUMBER_INTEGER ']'

    NUMBER_INTEGER  shift, and go to state 176


State 159

  109 block: • '{' varDefinitions stms '}'
  109      | '{' varDefinitions • stms '}'
  111 varDefinitions: varDefinitions • varDefinition
  112 varDefinition: • IDENTIFIER ':' typeExpr ';'
  113 stms: • stms stm
  114     | • stm
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 190
    '{'         shift, and go to state 143

    block             go to state 191
    varDefinition     go to state 192
    stms              go to state 193
    stm               go to state 194
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 160

   43 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' • typeExpr $@7 block
   45                 | "operator" user_defined_operators '(' argsDefinition ')' ':' • typeExpr $@8 ';'
   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 198
    typePtrExpr  go to state 131


State 161

  105 typeName: IDENTIFIER •

    $default  reduce using rule 105 (typeName)


State 162

   93 typeExpr: "enum" '<' typeNames • '>'
  103 typeNames: typeNames • ',' typeName

    '>'  shift, and go to state 199
    ','  shift, and go to state 200


State 163

  104 typeNames: typeName •

    $default  reduce using rule 104 (typeNames)


State 164

   95 typeExpr: "list" '<' typeExpr • '>'

    '>'  shift, and go to state 201


State 165

   97 typeExpr: "map" '<' typeExpr • ',' typeExpr '>'

    ','  shift, and go to state 202


State 166

   94 typeExpr: "range" '<' typeExpr • '>'

    '>'  shift, and go to state 203


State 167

   96 typeExpr: "set" '<' typeExpr • '>'

    '>'  shift, and go to state 204


State 168

  102 typeExprs: typeExpr •

    $default  reduce using rule 102 (typeExprs)


State 169

   99 typePtrExpr: IDENTIFIER '<' typeExprs • '>'
  101 typeExprs: typeExprs • ',' typeExpr

    '>'  shift, and go to state 205
    ','  shift, and go to state 206


State 170

   31 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@1 • block
  109 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 143

    block  go to state 207


State 171

   33 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@2 • ';'

    ';'  shift, and go to state 208


State 172

   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition • ')' ':' typeExpr $@5 block
   41                 | determiner specifier "function" IDENTIFIER '(' argsDefinition • ')' ':' typeExpr $@6 ';'
  106 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 116
    ')'  shift, and go to state 209


State 173

   35 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition • ')' $@3 block
   37                 | determiner specifier "procedure" IDENTIFIER '(' argsDefinition • ')' $@4 ';'
  106 argsDefinition: argsDefinition • ',' argDefinition

    ','  shift, and go to state 116
    ')'  shift, and go to state 210


State 174

   87 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' • ':' typeExpr ';'

    ':'  shift, and go to state 211


State 175

   86 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition ')' • ';'

    ';'  shift, and go to state 212


State 176

  163 constExpr: '[' NUMBER_INTEGER ".." NUMBER_INTEGER • ']'

    ']'  shift, and go to state 213


State 177

  147 simple_stm: "break" •

    $default  reduce using rule 147 (simple_stm)


State 178

  148 simple_stm: "continue" •

    $default  reduce using rule 148 (simple_stm)


State 179

  109 block: • '{' varDefinitions stms '}'
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  119    | "do" • stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    block             go to state 191
    stm               go to state 215
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 180

  120 stm: "for" • '(' assignedVariable ':' expr ')' stm

    '('  shift, and go to state 216


State 181

  121 stm: "foreach" • assignedVariable "in" expr stm
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"

    "this"      shift, and go to state 185
    IDENTIFIER  shift, and go to state 217

    assignedVariable  go to state 218


State 182

  116 stm: "if" • '(' expr ')' stm
  117    | "if" • '(' expr ')' stm "else" stm

    '('  shift, and go to state 219


State 183

  144 simple_stm: "readln" • '(' expr ')'

    '('  shift, and go to state 220


State 184

  149 simple_stm: "return" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 230


State 185

  153 assignedVariable: "this" •

    $default  reduce using rule 153 (assignedVariable)


State 186

  145 simple_stm: "write" • '(' expr ')'

    '('  shift, and go to state 231


State 187

  146 simple_stm: "writeln" • '(' expr ')'

    '('  shift, and go to state 232


State 188

  118 stm: "while" • '(' expr ')' stm

    '('  shift, and go to state 233


State 189

  122 stm: "switch" • '(' assignedVariable ')' '{' case default '}'

    '('  shift, and go to state 234


State 190

  112 varDefinition: IDENTIFIER • ':' typeExpr ';'
  150 assignedVariable: IDENTIFIER •
  151                 | IDENTIFIER • '[' args ']'
  154 methodName: IDENTIFIER •

    ':'  shift, and go to state 235
    '['  shift, and go to state 236

    '('       reduce using rule 154 (methodName)
    $default  reduce using rule 150 (assignedVariable)


State 191

  123 stm: block •

    $default  reduce using rule 123 (stm)


State 192

  111 varDefinitions: varDefinitions varDefinition •

    $default  reduce using rule 111 (varDefinitions)


State 193

  109 block: • '{' varDefinitions stms '}'
  109      | '{' varDefinitions stms • '}'
  113 stms: stms • stm
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143
    '}'         shift, and go to state 237

    block             go to state 191
    stm               go to state 238
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 194

  114 stms: stm •

    $default  reduce using rule 114 (stms)


State 195

  115 stm: simple_stm • ';'

    ';'  shift, and go to state 239


State 196

  129 simple_stm: assignedVariable • ":=" expr
  130           | assignedVariable • "++"
  131           | assignedVariable • "--"
  132           | assignedVariable • "+=" expr
  133           | assignedVariable • "-=" expr
  134           | assignedVariable • "*=" expr
  135           | assignedVariable • "/=" expr
  136           | assignedVariable • "%=" expr
  137           | assignedVariable • "||=" expr
  138           | assignedVariable • "&&=" expr
  139           | assignedVariable • "&=" expr
  140           | assignedVariable • "|=" expr
  141           | assignedVariable • "<<=" expr
  142           | assignedVariable • ">>=" expr
  152 assignedVariable: assignedVariable • '.' IDENTIFIER
  155 methodName: assignedVariable • '.' IDENTIFIER

    ":="   shift, and go to state 240
    "+="   shift, and go to state 241
    "-="   shift, and go to state 242
    "*="   shift, and go to state 243
    "/="   shift, and go to state 244
    "%="   shift, and go to state 245
    "||="  shift, and go to state 246
    "&&="  shift, and go to state 247
    "&="   shift, and go to state 248
    "|="   shift, and go to state 249
    "<<="  shift, and go to state 250
    ">>="  shift, and go to state 251
    "++"   shift, and go to state 252
    "--"   shift, and go to state 253
    '.'    shift, and go to state 254


State 197

  143 simple_stm: methodName • '(' args ')'

    '('  shift, and go to state 255


State 198

   42 $@7: • %empty
   43 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr • $@7 block
   44 $@8: • %empty
   45 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr • $@8 ';'

    ';'       reduce using rule 44 ($@8)
    $default  reduce using rule 42 ($@7)

    $@7  go to state 256
    $@8  go to state 257


State 199

   93 typeExpr: "enum" '<' typeNames '>' •

    $default  reduce using rule 93 (typeExpr)


State 200

  103 typeNames: typeNames ',' • typeName
  105 typeName: • IDENTIFIER

    IDENTIFIER  shift, and go to state 161

    typeName  go to state 258


State 201

   95 typeExpr: "list" '<' typeExpr '>' •

    $default  reduce using rule 95 (typeExpr)


State 202

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   97         | "map" '<' typeExpr ',' • typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 259
    typePtrExpr  go to state 131


State 203

   94 typeExpr: "range" '<' typeExpr '>' •

    $default  reduce using rule 94 (typeExpr)


State 204

   96 typeExpr: "set" '<' typeExpr '>' •

    $default  reduce using rule 96 (typeExpr)


State 205

   99 typePtrExpr: IDENTIFIER '<' typeExprs '>' •

    $default  reduce using rule 99 (typePtrExpr)


State 206

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER
  101 typeExprs: typeExprs ',' • typeExpr

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 260
    typePtrExpr  go to state 131


State 207

   31 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@1 block •

    $default  reduce using rule 31 (methodDefinition)


State 208

   33 methodDefinition: determiner IDENTIFIER '(' argsDefinition ')' $@2 ';' •

    $default  reduce using rule 33 (methodDefinition)


State 209

   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' • ':' typeExpr $@5 block
   41                 | determiner specifier "function" IDENTIFIER '(' argsDefinition ')' • ':' typeExpr $@6 ';'

    ':'  shift, and go to state 261


State 210

   34 $@3: • %empty
   35 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' • $@3 block
   36 $@4: • %empty
   37 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' • $@4 ';'

    ';'       reduce using rule 36 ($@4)
    $default  reduce using rule 34 ($@3)

    $@3  go to state 262
    $@4  go to state 263


State 211

   87 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' ':' • typeExpr ';'
   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 264
    typePtrExpr  go to state 131


State 212

   86 interfaceDefinition: "procedure" IDENTIFIER '(' argsDefinition ')' ';' •

    $default  reduce using rule 86 (interfaceDefinition)


State 213

  163 constExpr: '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']' •

    $default  reduce using rule 163 (constExpr)


State 214

  150 assignedVariable: IDENTIFIER •
  151                 | IDENTIFIER • '[' args ']'
  154 methodName: IDENTIFIER •

    '['  shift, and go to state 236

    '('       reduce using rule 154 (methodName)
    $default  reduce using rule 150 (assignedVariable)


State 215

  119 stm: "do" stm • "while" '(' expr ')' ';'

    "while"  shift, and go to state 265


State 216

  120 stm: "for" '(' • assignedVariable ':' expr ')' stm
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"

    "this"      shift, and go to state 185
    IDENTIFIER  shift, and go to state 217

    assignedVariable  go to state 266


State 217

  150 assignedVariable: IDENTIFIER •
  151                 | IDENTIFIER • '[' args ']'

    '['  shift, and go to state 236

    $default  reduce using rule 150 (assignedVariable)


State 218

  121 stm: "foreach" assignedVariable • "in" expr stm
  152 assignedVariable: assignedVariable • '.' IDENTIFIER

    "in"  shift, and go to state 267
    '.'   shift, and go to state 268


State 219

  116 stm: "if" '(' • expr ')' stm
  117    | "if" '(' • expr ')' stm "else" stm
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 269


State 220

  144 simple_stm: "readln" '(' • expr ')'
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 270


State 221

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  185     | "++" • expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 271


State 222

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  186     | "--" • expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 272


State 223

   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER
  167 expr: "new" • typePtrExpr '(' args_opt ')'

    IDENTIFIER  shift, and go to state 129

    typePtrExpr  go to state 273


State 224

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  170     | '!' • expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 274


State 225

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  179     | '-' • expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 275


State 226

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'
  191     | '(' • expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 276


State 227

  152 assignedVariable: assignedVariable • '.' IDENTIFIER
  155 methodName: assignedVariable • '.' IDENTIFIER
  165 expr: assignedVariable •

    '.'  shift, and go to state 254

    $default  reduce using rule 165 (expr)


State 228

  166 expr: methodName • '(' args ')'

    '('  shift, and go to state 277


State 229

  164 expr: constExpr •

    $default  reduce using rule 164 (expr)


State 230

  149 simple_stm: "return" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 149 (simple_stm)


State 231

  145 simple_stm: "write" '(' • expr ')'
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 297


State 232

  146 simple_stm: "writeln" '(' • expr ')'
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 298


State 233

  118 stm: "while" '(' • expr ')' stm
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 299


State 234

  122 stm: "switch" '(' • assignedVariable ')' '{' case default '}'
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"

    "this"      shift, and go to state 185
    IDENTIFIER  shift, and go to state 217

    assignedVariable  go to state 300


State 235

   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER
  112 varDefinition: IDENTIFIER ':' • typeExpr ';'

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 301
    typePtrExpr  go to state 131


State 236

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  151                 | IDENTIFIER '[' • args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  156 args: • args ',' expr
  157     | • expr
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    args              go to state 302
    constExpr         go to state 229
    expr              go to state 303


State 237

  109 block: '{' varDefinitions stms '}' •

    $default  reduce using rule 109 (block)


State 238

  113 stms: stms stm •

    $default  reduce using rule 113 (stms)


State 239

  115 stm: simple_stm ';' •

    $default  reduce using rule 115 (stm)


State 240

  129 simple_stm: assignedVariable ":=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 304


State 241

  132 simple_stm: assignedVariable "+=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 305


State 242

  133 simple_stm: assignedVariable "-=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 306


State 243

  134 simple_stm: assignedVariable "*=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 307


State 244

  135 simple_stm: assignedVariable "/=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 308


State 245

  136 simple_stm: assignedVariable "%=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 309


State 246

  137 simple_stm: assignedVariable "||=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 310


State 247

  138 simple_stm: assignedVariable "&&=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 311


State 248

  139 simple_stm: assignedVariable "&=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 312


State 249

  140 simple_stm: assignedVariable "|=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 313


State 250

  141 simple_stm: assignedVariable "<<=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 314


State 251

  142 simple_stm: assignedVariable ">>=" • expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 315


State 252

  130 simple_stm: assignedVariable "++" •

    $default  reduce using rule 130 (simple_stm)


State 253

  131 simple_stm: assignedVariable "--" •

    $default  reduce using rule 131 (simple_stm)


State 254

  152 assignedVariable: assignedVariable '.' • IDENTIFIER
  155 methodName: assignedVariable '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 316


State 255

  143 simple_stm: methodName '(' • args ')'
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  156 args: • args ',' expr
  157     | • expr
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    args              go to state 317
    constExpr         go to state 229
    expr              go to state 303


State 256

   43 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 • block
  109 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 143

    block  go to state 318


State 257

   45 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 • ';'

    ';'  shift, and go to state 319


State 258

  103 typeNames: typeNames ',' typeName •

    $default  reduce using rule 103 (typeNames)


State 259

   97 typeExpr: "map" '<' typeExpr ',' typeExpr • '>'

    '>'  shift, and go to state 320


State 260

  101 typeExprs: typeExprs ',' typeExpr •

    $default  reduce using rule 101 (typeExprs)


State 261

   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' • typeExpr $@5 block
   41                 | determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' • typeExpr $@6 ';'
   88 typeExpr: • "char"
   89         | • "integer"
   90         | • "float"
   91         | • "boolean"
   92         | • "string"
   93         | • "enum" '<' typeNames '>'
   94         | • "range" '<' typeExpr '>'
   95         | • "list" '<' typeExpr '>'
   96         | • "set" '<' typeExpr '>'
   97         | • "map" '<' typeExpr ',' typeExpr '>'
   98         | • typePtrExpr
   99 typePtrExpr: • IDENTIFIER '<' typeExprs '>'
  100            | • IDENTIFIER

    "boolean"   shift, and go to state 119
    "char"      shift, and go to state 120
    "enum"      shift, and go to state 121
    "float"     shift, and go to state 122
    "integer"   shift, and go to state 123
    "list"      shift, and go to state 124
    "map"       shift, and go to state 125
    "range"     shift, and go to state 126
    "set"       shift, and go to state 127
    "string"    shift, and go to state 128
    IDENTIFIER  shift, and go to state 129

    typeExpr     go to state 321
    typePtrExpr  go to state 131


State 262

   35 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 • block
  109 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 143

    block  go to state 322


State 263

   37 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 • ';'

    ';'  shift, and go to state 323


State 264

   87 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr • ';'

    ';'  shift, and go to state 324


State 265

  119 stm: "do" stm "while" • '(' expr ')' ';'

    '('  shift, and go to state 325


State 266

  120 stm: "for" '(' assignedVariable • ':' expr ')' stm
  152 assignedVariable: assignedVariable • '.' IDENTIFIER

    ':'  shift, and go to state 326
    '.'  shift, and go to state 268


State 267

  121 stm: "foreach" assignedVariable "in" • expr stm
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 327


State 268

  152 assignedVariable: assignedVariable '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 328


State 269

  116 stm: "if" '(' expr • ')' stm
  117    | "if" '(' expr • ')' stm "else" stm
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 329


State 270

  144 simple_stm: "readln" '(' expr • ')'
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 330


State 271

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  185     | "++" expr •
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 185 (expr)


State 272

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  186     | "--" expr •
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 186 (expr)


State 273

  167 expr: "new" typePtrExpr • '(' args_opt ')'

    '('  shift, and go to state 331


State 274

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  170     | '!' expr •
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 170 (expr)


State 275

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  179     | '-' expr •
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 179 (expr)


State 276

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr
  191     | '(' expr • ')'

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 332


State 277

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  156 args: • args ',' expr
  157     | • expr
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  166     | methodName '(' • args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    args              go to state 333
    constExpr         go to state 229
    expr              go to state 303


State 278

  183 expr: expr "++" •

    $default  reduce using rule 183 (expr)


State 279

  184 expr: expr "--" •

    $default  reduce using rule 184 (expr)


State 280

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  168     | expr "&&" • expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 334


State 281

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  169     | expr "||" • expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 335


State 282

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  189     | expr "<<" • expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 336


State 283

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  190     | expr ">>" • expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 337


State 284

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  175     | expr "==" • expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 338


State 285

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  172     | expr "<=" • expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 339


State 286

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  174     | expr ">=" • expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 340


State 287

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  176     | expr "!=" • expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 341


State 288

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  171     | expr '<' • expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 342


State 289

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  173     | expr '>' • expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 343


State 290

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  177     | expr '+' • expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 344


State 291

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  178     | expr '-' • expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 345


State 292

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  180     | expr '*' • expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 346


State 293

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  181     | expr '/' • expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 347


State 294

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  182     | expr '%' • expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 348


State 295

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  188     | expr '|' • expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 349


State 296

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  187     | expr '&' • expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 350


State 297

  145 simple_stm: "write" '(' expr • ')'
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 351


State 298

  146 simple_stm: "writeln" '(' expr • ')'
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 352


State 299

  118 stm: "while" '(' expr • ')' stm
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 353


State 300

  122 stm: "switch" '(' assignedVariable • ')' '{' case default '}'
  152 assignedVariable: assignedVariable • '.' IDENTIFIER

    ')'  shift, and go to state 354
    '.'  shift, and go to state 268


State 301

  112 varDefinition: IDENTIFIER ':' typeExpr • ';'

    ';'  shift, and go to state 355


State 302

  151 assignedVariable: IDENTIFIER '[' args • ']'
  156 args: args • ',' expr

    ','  shift, and go to state 356
    ']'  shift, and go to state 357


State 303

  157 args: expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 157 (args)


State 304

  129 simple_stm: assignedVariable ":=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 129 (simple_stm)


State 305

  132 simple_stm: assignedVariable "+=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 132 (simple_stm)


State 306

  133 simple_stm: assignedVariable "-=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 133 (simple_stm)


State 307

  134 simple_stm: assignedVariable "*=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 134 (simple_stm)


State 308

  135 simple_stm: assignedVariable "/=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 135 (simple_stm)


State 309

  136 simple_stm: assignedVariable "%=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 136 (simple_stm)


State 310

  137 simple_stm: assignedVariable "||=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 137 (simple_stm)


State 311

  138 simple_stm: assignedVariable "&&=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 138 (simple_stm)


State 312

  139 simple_stm: assignedVariable "&=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 139 (simple_stm)


State 313

  140 simple_stm: assignedVariable "|=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 140 (simple_stm)


State 314

  141 simple_stm: assignedVariable "<<=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 141 (simple_stm)


State 315

  142 simple_stm: assignedVariable ">>=" expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 142 (simple_stm)


State 316

  152 assignedVariable: assignedVariable '.' IDENTIFIER •
  155 methodName: assignedVariable '.' IDENTIFIER •

    '('       reduce using rule 155 (methodName)
    $default  reduce using rule 152 (assignedVariable)


State 317

  143 simple_stm: methodName '(' args • ')'
  156 args: args • ',' expr

    ','  shift, and go to state 356
    ')'  shift, and go to state 358


State 318

   43 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@7 block •

    $default  reduce using rule 43 (methodDefinition)


State 319

   45 methodDefinition: "operator" user_defined_operators '(' argsDefinition ')' ':' typeExpr $@8 ';' •

    $default  reduce using rule 45 (methodDefinition)


State 320

   97 typeExpr: "map" '<' typeExpr ',' typeExpr '>' •

    $default  reduce using rule 97 (typeExpr)


State 321

   38 $@5: • %empty
   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr • $@5 block
   40 $@6: • %empty
   41 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr • $@6 ';'

    ';'       reduce using rule 40 ($@6)
    $default  reduce using rule 38 ($@5)

    $@5  go to state 359
    $@6  go to state 360


State 322

   35 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@3 block •

    $default  reduce using rule 35 (methodDefinition)


State 323

   37 methodDefinition: determiner specifier "procedure" IDENTIFIER '(' argsDefinition ')' $@4 ';' •

    $default  reduce using rule 37 (methodDefinition)


State 324

   87 interfaceDefinition: "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr ';' •

    $default  reduce using rule 87 (interfaceDefinition)


State 325

  119 stm: "do" stm "while" '(' • expr ')' ';'
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 361


State 326

  120 stm: "for" '(' assignedVariable ':' • expr ')' stm
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 362


State 327

  109 block: • '{' varDefinitions stms '}'
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  121    | "foreach" assignedVariable "in" expr • stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"        shift, and go to state 278
    "--"        shift, and go to state 279
    "&&"        shift, and go to state 280
    "||"        shift, and go to state 281
    "<<"        shift, and go to state 282
    ">>"        shift, and go to state 283
    "=="        shift, and go to state 284
    "<="        shift, and go to state 285
    ">="        shift, and go to state 286
    "!="        shift, and go to state 287
    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '<'         shift, and go to state 288
    '>'         shift, and go to state 289
    '+'         shift, and go to state 290
    '-'         shift, and go to state 291
    '*'         shift, and go to state 292
    '/'         shift, and go to state 293
    '%'         shift, and go to state 294
    '|'         shift, and go to state 295
    '&'         shift, and go to state 296
    '{'         shift, and go to state 143

    block             go to state 191
    stm               go to state 363
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 328

  152 assignedVariable: assignedVariable '.' IDENTIFIER •

    $default  reduce using rule 152 (assignedVariable)


State 329

  109 block: • '{' varDefinitions stms '}'
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  116    | "if" '(' expr ')' • stm
  117    | • "if" '(' expr ')' stm "else" stm
  117    | "if" '(' expr ')' • stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    block             go to state 191
    stm               go to state 364
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 330

  144 simple_stm: "readln" '(' expr ')' •

    $default  reduce using rule 144 (simple_stm)


State 331

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  156 args: • args ',' expr
  157     | • expr
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  167     | "new" typePtrExpr '(' • args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'
  192 args_opt: • %empty
  193         | • args

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    $default  reduce using rule 192 (args_opt)

    assignedVariable  go to state 227
    methodName        go to state 228
    args              go to state 365
    constExpr         go to state 229
    expr              go to state 303
    args_opt          go to state 366


State 332

  191 expr: '(' expr ')' •

    $default  reduce using rule 191 (expr)


State 333

  156 args: args • ',' expr
  166 expr: methodName '(' args • ')'

    ','  shift, and go to state 356
    ')'  shift, and go to state 367


State 334

  168 expr: expr • "&&" expr
  168     | expr "&&" expr •
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 168 (expr)


State 335

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  169     | expr "||" expr •
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 169 (expr)


State 336

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  189     | expr "<<" expr •
  190     | expr • ">>" expr

    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283

    $default  reduce using rule 189 (expr)


State 337

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr
  190     | expr ">>" expr •

    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283

    $default  reduce using rule 190 (expr)


State 338

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  175     | expr "==" expr •
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 175 (expr)


State 339

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  172     | expr "<=" expr •
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 172 (expr)


State 340

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  174     | expr ">=" expr •
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 174 (expr)


State 341

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  176     | expr "!=" expr •
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 176 (expr)


State 342

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  171     | expr '<' expr •
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 171 (expr)


State 343

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  173     | expr '>' expr •
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    "=="  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "!="  error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 173 (expr)


State 344

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  177     | expr '+' expr •
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 177 (expr)


State 345

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  178     | expr '-' expr •
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 178 (expr)


State 346

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  180     | expr '*' expr •
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 180 (expr)


State 347

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  181     | expr '/' expr •
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 181 (expr)


State 348

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  182     | expr '%' expr •
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 182 (expr)


State 349

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  188     | expr '|' expr •
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    '&'   shift, and go to state 296

    $default  reduce using rule 188 (expr)


State 350

  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  187     | expr '&' expr •
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283

    $default  reduce using rule 187 (expr)


State 351

  145 simple_stm: "write" '(' expr ')' •

    $default  reduce using rule 145 (simple_stm)


State 352

  146 simple_stm: "writeln" '(' expr ')' •

    $default  reduce using rule 146 (simple_stm)


State 353

  109 block: • '{' varDefinitions stms '}'
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  118    | "while" '(' expr ')' • stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    block             go to state 191
    stm               go to state 368
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 354

  122 stm: "switch" '(' assignedVariable ')' • '{' case default '}'

    '{'  shift, and go to state 369


State 355

  112 varDefinition: IDENTIFIER ':' typeExpr ';' •

    $default  reduce using rule 112 (varDefinition)


State 356

  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  156 args: args ',' • expr
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 370


State 357

  151 assignedVariable: IDENTIFIER '[' args ']' •

    $default  reduce using rule 151 (assignedVariable)


State 358

  143 simple_stm: methodName '(' args ')' •

    $default  reduce using rule 143 (simple_stm)


State 359

   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 • block
  109 block: • '{' varDefinitions stms '}'

    '{'  shift, and go to state 143

    block  go to state 371


State 360

   41 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 • ';'

    ';'  shift, and go to state 372


State 361

  119 stm: "do" stm "while" '(' expr • ')' ';'
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 373


State 362

  120 stm: "for" '(' assignedVariable ':' expr • ')' stm
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ')'   shift, and go to state 374


State 363

  121 stm: "foreach" assignedVariable "in" expr stm •

    $default  reduce using rule 121 (stm)


State 364

  116 stm: "if" '(' expr ')' stm •
  117    | "if" '(' expr ')' stm • "else" stm

    "else"  shift, and go to state 375

    $default  reduce using rule 116 (stm)


State 365

  156 args: args • ',' expr
  193 args_opt: args •

    ','  shift, and go to state 356

    $default  reduce using rule 193 (args_opt)


State 366

  167 expr: "new" typePtrExpr '(' args_opt • ')'

    ')'  shift, and go to state 376


State 367

  166 expr: methodName '(' args ')' •

    $default  reduce using rule 166 (expr)


State 368

  118 stm: "while" '(' expr ')' stm •

    $default  reduce using rule 118 (stm)


State 369

  122 stm: "switch" '(' assignedVariable ')' '{' • case default '}'
  124 case: • "case" expr ':' stms
  125     | • "case" expr ':' stms case
  126     | • error

    error   shift, and go to state 377
    "case"  shift, and go to state 378

    case  go to state 379


State 370

  156 args: args ',' expr •
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296

    $default  reduce using rule 156 (args)


State 371

   39 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@5 block •

    $default  reduce using rule 39 (methodDefinition)


State 372

   41 methodDefinition: determiner specifier "function" IDENTIFIER '(' argsDefinition ')' ':' typeExpr $@6 ';' •

    $default  reduce using rule 41 (methodDefinition)


State 373

  119 stm: "do" stm "while" '(' expr ')' • ';'

    ';'  shift, and go to state 380


State 374

  109 block: • '{' varDefinitions stms '}'
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  120    | "for" '(' assignedVariable ':' expr ')' • stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    block             go to state 191
    stm               go to state 381
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 375

  109 block: • '{' varDefinitions stms '}'
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  117    | "if" '(' expr ')' stm "else" • stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    block             go to state 191
    stm               go to state 382
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 376

  167 expr: "new" typePtrExpr '(' args_opt ')' •

    $default  reduce using rule 167 (expr)


State 377

  126 case: error •

    $default  reduce using rule 126 (case)


State 378

  124 case: "case" • expr ':' stms
  125     | "case" • expr ':' stms case
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER
  158 constExpr: • "null"
  159          | • NUMBER_INTEGER
  160          | • NUMBER_FLOAT
  161          | • LITTERAL_CHAR
  162          | • LITTERAL_STRING
  163          | • '[' NUMBER_INTEGER ".." NUMBER_INTEGER ']'
  164 expr: • constExpr
  165     | • assignedVariable
  166     | • methodName '(' args ')'
  167     | • "new" typePtrExpr '(' args_opt ')'
  168     | • expr "&&" expr
  169     | • expr "||" expr
  170     | • '!' expr
  171     | • expr '<' expr
  172     | • expr "<=" expr
  173     | • expr '>' expr
  174     | • expr ">=" expr
  175     | • expr "==" expr
  176     | • expr "!=" expr
  177     | • expr '+' expr
  178     | • expr '-' expr
  179     | • '-' expr
  180     | • expr '*' expr
  181     | • expr '/' expr
  182     | • expr '%' expr
  183     | • expr "++"
  184     | • expr "--"
  185     | • "++" expr
  186     | • "--" expr
  187     | • expr '&' expr
  188     | • expr '|' expr
  189     | • expr "<<" expr
  190     | • expr ">>" expr
  191     | • '(' expr ')'

    "++"             shift, and go to state 221
    "--"             shift, and go to state 222
    "new"            shift, and go to state 223
    "null"           shift, and go to state 108
    "this"           shift, and go to state 185
    IDENTIFIER       shift, and go to state 214
    LITTERAL_STRING  shift, and go to state 109
    NUMBER_INTEGER   shift, and go to state 110
    LITTERAL_CHAR    shift, and go to state 111
    NUMBER_FLOAT     shift, and go to state 112
    '!'              shift, and go to state 224
    '-'              shift, and go to state 225
    '('              shift, and go to state 226
    '['              shift, and go to state 113

    assignedVariable  go to state 227
    methodName        go to state 228
    constExpr         go to state 229
    expr              go to state 383


State 379

  122 stm: "switch" '(' assignedVariable ')' '{' case • default '}'
  127 default: • "default" ':' stms
  128        | • %empty

    "default"  shift, and go to state 384

    $default  reduce using rule 128 (default)

    default  go to state 385


State 380

  119 stm: "do" stm "while" '(' expr ')' ';' •

    $default  reduce using rule 119 (stm)


State 381

  120 stm: "for" '(' assignedVariable ':' expr ')' stm •

    $default  reduce using rule 120 (stm)


State 382

  117 stm: "if" '(' expr ')' stm "else" stm •

    $default  reduce using rule 117 (stm)


State 383

  124 case: "case" expr • ':' stms
  125     | "case" expr • ':' stms case
  168 expr: expr • "&&" expr
  169     | expr • "||" expr
  171     | expr • '<' expr
  172     | expr • "<=" expr
  173     | expr • '>' expr
  174     | expr • ">=" expr
  175     | expr • "==" expr
  176     | expr • "!=" expr
  177     | expr • '+' expr
  178     | expr • '-' expr
  180     | expr • '*' expr
  181     | expr • '/' expr
  182     | expr • '%' expr
  183     | expr • "++"
  184     | expr • "--"
  187     | expr • '&' expr
  188     | expr • '|' expr
  189     | expr • "<<" expr
  190     | expr • ">>" expr

    "++"  shift, and go to state 278
    "--"  shift, and go to state 279
    "&&"  shift, and go to state 280
    "||"  shift, and go to state 281
    "<<"  shift, and go to state 282
    ">>"  shift, and go to state 283
    "=="  shift, and go to state 284
    "<="  shift, and go to state 285
    ">="  shift, and go to state 286
    "!="  shift, and go to state 287
    '<'   shift, and go to state 288
    '>'   shift, and go to state 289
    '+'   shift, and go to state 290
    '-'   shift, and go to state 291
    '*'   shift, and go to state 292
    '/'   shift, and go to state 293
    '%'   shift, and go to state 294
    '|'   shift, and go to state 295
    '&'   shift, and go to state 296
    ':'   shift, and go to state 386


State 384

  127 default: "default" • ':' stms

    ':'  shift, and go to state 387


State 385

  122 stm: "switch" '(' assignedVariable ')' '{' case default • '}'

    '}'  shift, and go to state 388


State 386

  109 block: • '{' varDefinitions stms '}'
  113 stms: • stms stm
  114     | • stm
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  124 case: "case" expr ':' • stms
  125     | "case" expr ':' • stms case
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    block             go to state 191
    stms              go to state 389
    stm               go to state 194
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 387

  109 block: • '{' varDefinitions stms '}'
  113 stms: • stms stm
  114     | • stm
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  127 default: "default" ':' • stms
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    block             go to state 191
    stms              go to state 390
    stm               go to state 194
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 388

  122 stm: "switch" '(' assignedVariable ')' '{' case default '}' •

    $default  reduce using rule 122 (stm)


State 389

  109 block: • '{' varDefinitions stms '}'
  113 stms: stms • stm
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  124 case: • "case" expr ':' stms
  124     | "case" expr ':' stms •
  125     | • "case" expr ':' stms case
  125     | "case" expr ':' stms • case
  126     | • error
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    error       shift, and go to state 377
    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    "case"      shift, and go to state 378
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    "default"  reduce using rule 124 (case)
    '}'        reduce using rule 124 (case)

    block             go to state 191
    stm               go to state 238
    case              go to state 391
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 390

  109 block: • '{' varDefinitions stms '}'
  113 stms: stms • stm
  115 stm: • simple_stm ';'
  116    | • "if" '(' expr ')' stm
  117    | • "if" '(' expr ')' stm "else" stm
  118    | • "while" '(' expr ')' stm
  119    | • "do" stm "while" '(' expr ')' ';'
  120    | • "for" '(' assignedVariable ':' expr ')' stm
  121    | • "foreach" assignedVariable "in" expr stm
  122    | • "switch" '(' assignedVariable ')' '{' case default '}'
  123    | • block
  127 default: "default" ':' stms •
  129 simple_stm: • assignedVariable ":=" expr
  130           | • assignedVariable "++"
  131           | • assignedVariable "--"
  132           | • assignedVariable "+=" expr
  133           | • assignedVariable "-=" expr
  134           | • assignedVariable "*=" expr
  135           | • assignedVariable "/=" expr
  136           | • assignedVariable "%=" expr
  137           | • assignedVariable "||=" expr
  138           | • assignedVariable "&&=" expr
  139           | • assignedVariable "&=" expr
  140           | • assignedVariable "|=" expr
  141           | • assignedVariable "<<=" expr
  142           | • assignedVariable ">>=" expr
  143           | • methodName '(' args ')'
  144           | • "readln" '(' expr ')'
  145           | • "write" '(' expr ')'
  146           | • "writeln" '(' expr ')'
  147           | • "break"
  148           | • "continue"
  149           | • "return" expr
  150 assignedVariable: • IDENTIFIER
  151                 | • IDENTIFIER '[' args ']'
  152                 | • assignedVariable '.' IDENTIFIER
  153                 | • "this"
  154 methodName: • IDENTIFIER
  155           | • assignedVariable '.' IDENTIFIER

    "break"     shift, and go to state 177
    "continue"  shift, and go to state 178
    "do"        shift, and go to state 179
    "for"       shift, and go to state 180
    "foreach"   shift, and go to state 181
    "if"        shift, and go to state 182
    "readln"    shift, and go to state 183
    "return"    shift, and go to state 184
    "this"      shift, and go to state 185
    "write"     shift, and go to state 186
    "writeln"   shift, and go to state 187
    "while"     shift, and go to state 188
    "switch"    shift, and go to state 189
    IDENTIFIER  shift, and go to state 214
    '{'         shift, and go to state 143

    $default  reduce using rule 127 (default)

    block             go to state 191
    stm               go to state 238
    simple_stm        go to state 195
    assignedVariable  go to state 196
    methodName        go to state 197


State 391

  125 case: "case" expr ':' stms case •

    $default  reduce using rule 125 (case)
